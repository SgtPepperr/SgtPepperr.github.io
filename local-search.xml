<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>python学习（一）</title>
    <link href="/2022/01/18/python%E5%AD%A6%E4%B9%A0/"/>
    <url>/2022/01/18/python%E5%AD%A6%E4%B9%A0/</url>
    
    <content type="html"><![CDATA[<h1 id="python学习（使用python3"><a href="#python学习（使用python3" class="headerlink" title="python学习（使用python3)"></a>python学习（使用python3)</h1><p>学习书籍：《python编程：从入门到实践》</p><p>使用IDE:        pycharm2021.3</p><p>python官网：<a href="https://www.python.org/">Welcome to Python.org</a></p><h2 id="二、变量和简单数据类型"><a href="#二、变量和简单数据类型" class="headerlink" title="二、变量和简单数据类型"></a>二、变量和简单数据类型</h2><h3 id="2-2-变量"><a href="#2-2-变量" class="headerlink" title="2.2 变量"></a>2.2 变量</h3><h4 id="2-2-1-何为变量"><a href="#2-2-1-何为变量" class="headerlink" title="2.2.1 何为变量"></a>2.2.1 何为变量</h4><figure class="highlight python"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs python">message=<span class="hljs-string">&quot;hello&quot;</span><br><span class="hljs-built_in">print</span>(message)<br>message=<span class="hljs-string">&#x27;wiwi&#x27;</span><br><span class="hljs-built_in">print</span>(message)<br></code></pre></div></td></tr></table></figure><p>如上图，执行会打印<code>hello</code>，那么可以理解为<code>meesage</code>存储了后面字符串的信息，且这个信息可以被修改，python始终保存变量的最新值，打印时会将当前存储的信息打印出来。</p><h4 id="2-2-2-变量命名的部分规则"><a href="#2-2-2-变量命名的部分规则" class="headerlink" title="2.2.2 变量命名的部分规则"></a>2.2.2 变量命名的部分规则</h4><ul><li>变量名只包括字母、数字、下划线，以字母或下划线打头</li><li>变量名不含有空格，不能用python关键字和函数名作为变量名</li><li>变量名应简洁而具有描述性</li></ul><h4 id="2-2-3-变量命名错误"><a href="#2-2-3-变量命名错误" class="headerlink" title="2.2.3 变量命名错误"></a>2.2.3 变量命名错误</h4><p>命名错误时，程序会给出相应的错误信息。</p><figure class="highlight python"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs python">message=<span class="hljs-string">&quot;chekc&quot;</span><br><span class="hljs-built_in">print</span>(messag)<br><br>Traceback (most recent call last):<br>  File <span class="hljs-string">&quot;D:\python_learn\booktest\main.py&quot;</span>, line <span class="hljs-number">2</span>, <span class="hljs-keyword">in</span> &lt;module&gt;<br>    <span class="hljs-built_in">print</span>(messag)<br>NameError: name <span class="hljs-string">&#x27;messag&#x27;</span> <span class="hljs-keyword">is</span> <span class="hljs-keyword">not</span> defined<br></code></pre></div></td></tr></table></figure><h3 id="2-3-字符串"><a href="#2-3-字符串" class="headerlink" title="2.3 字符串"></a>2.3 字符串</h3><p>字符串是一系列字符，也是python的一种数据类型，往往用<code>“，’</code>双引号或单引号括起来</p><p>以下是一些基本的字符串操作：</p><ul><li><code>str.title()</code>，单词首字母大写</li><li><code>str.lower() str.upper()</code>,单词转换为大写（小写）</li><li><code>str1+str2</code>,字符串拼接</li><li><code>str.strip()</code>，去除两端空白符</li></ul><h3 id="2-4-数字"><a href="#2-4-数字" class="headerlink" title="2.4 数字"></a>2.4 数字</h3><p>包括整数，浮点数，数字运算一般可以在终端直接进行运行。</p><h4 id="2-4-1-使用str-避免类型错误"><a href="#2-4-1-使用str-避免类型错误" class="headerlink" title="2.4.1 使用str()避免类型错误"></a>2.4.1 使用str()避免类型错误</h4><figure class="highlight python"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs python">age=<span class="hljs-number">23</span><br>message=<span class="hljs-string">&quot;heloo&quot;</span>+age //错误写法<br>message=<span class="hljs-string">&quot;heloo&quot;</span>+<span class="hljs-built_in">str</span>(age)  //正确写法<br><span class="hljs-built_in">print</span>(message)<br></code></pre></div></td></tr></table></figure><p>如上图直接执行会报类型错误，由于程序无法判断是将age理解<strong>为数值还是字符串</strong>。</p><h3 id="2-5-注释"><a href="#2-5-注释" class="headerlink" title="2.5 注释"></a>2.5 注释</h3><p>使用<code>#</code>作为注释标记，该标记之后内容不会被解释器读取。</p><h3 id="2-6-python之禅"><a href="#2-6-python之禅" class="headerlink" title="2.6 python之禅"></a>2.6 python之禅</h3><figure class="highlight python"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs python"><span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">import</span> this<br>The Zen of Python, by Tim Peters<br><br>Beautiful <span class="hljs-keyword">is</span> better than ugly.<br>Explicit <span class="hljs-keyword">is</span> better than implicit.<br>Simple <span class="hljs-keyword">is</span> better than <span class="hljs-built_in">complex</span>.<br>Complex <span class="hljs-keyword">is</span> better than complicated.<br>Flat <span class="hljs-keyword">is</span> better than nested.<br>Sparse <span class="hljs-keyword">is</span> better than dense.<br>Readability counts.<br>Special cases aren<span class="hljs-string">&#x27;t special enough to break the rules.</span><br><span class="hljs-string">Although practicality beats purity.</span><br><span class="hljs-string">Errors should never pass silently.</span><br><span class="hljs-string">Unless explicitly silenced.</span><br><span class="hljs-string">In the face of ambiguity, refuse the temptation to guess.</span><br><span class="hljs-string">There should be one-- and preferably only one --obvious way to do it.</span><br><span class="hljs-string">Although that way may not be obvious at first unless you&#x27;</span>re Dutch.<br>Now <span class="hljs-keyword">is</span> better than never.<br>Although never <span class="hljs-keyword">is</span> often better than *right* now.<br>If the implementation <span class="hljs-keyword">is</span> hard to explain, it<span class="hljs-string">&#x27;s a bad idea.</span><br><span class="hljs-string">If the implementation is easy to explain, it may be a good idea.</span><br><span class="hljs-string">Namespaces are one honking great idea -- let&#x27;</span>s do more of those!<br></code></pre></div></td></tr></table></figure><h2 id="三、列表简介"><a href="#三、列表简介" class="headerlink" title="三、列表简介"></a>三、列表简介</h2><h3 id="3-1列表是什么"><a href="#3-1列表是什么" class="headerlink" title="3.1列表是什么"></a>3.1列表是什么</h3><p><strong>列表是由一系列按特定顺序排列的元素组成</strong>。用方括号（[])表示列表，用，分隔元素。</p><figure class="highlight python"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs python">bicycles=[<span class="hljs-string">&#x27;aa&#x27;</span>,<span class="hljs-string">&#x27;bb&#x27;</span>,<span class="hljs-string">&#x27;cc&#x27;</span>,<span class="hljs-string">&#x27;dd&#x27;</span>]<br><span class="hljs-built_in">print</span>(bicycles)<br></code></pre></div></td></tr></table></figure><p>基本用法：</p><ul><li>提取列表元素：<code>bicycles[i]</code>即可取出第i个项</li><li>索引从0，而不是1开始计数</li><li>索引可以为负数，-1代表倒数第一个元素，以此类推。</li></ul><h3 id="3-2-修改、添加和删除元素"><a href="#3-2-修改、添加和删除元素" class="headerlink" title="3.2 修改、添加和删除元素"></a>3.2 修改、添加和删除元素</h3><p>1.修改：</p><figure class="highlight python"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs python">a[<span class="hljs-number">0</span>]=<span class="hljs-number">3</span><br></code></pre></div></td></tr></table></figure><p>2.添加，删除：</p><figure class="highlight python"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs python">a=[<span class="hljs-string">&#x27;1&#x27;</span>,<span class="hljs-string">&#x27;2&#x27;</span>,<span class="hljs-string">&#x27;3&#x27;</span>]<br><br>a.append(<span class="hljs-number">4</span>)         //列表末尾添加元素<br>a.insert(<span class="hljs-number">0</span>,<span class="hljs-number">4</span>)       //列表指定索引位置插入元素<br><br><span class="hljs-keyword">del</span> a[<span class="hljs-number">0</span>]     //删除第一个元素<br>k=a.pop()    //弹出最后一个元素，也可以加索引<br>a.remove(<span class="hljs-string">&#x27;3&#x27;</span>)  //删除为该值的第一个指定元素<br></code></pre></div></td></tr></table></figure><h3 id="3-3-组织列表"><a href="#3-3-组织列表" class="headerlink" title="3.3 组织列表"></a>3.3 组织列表</h3><p>排序，长度：</p><figure class="highlight python"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs python">a=[<span class="hljs-string">&#x27;abc&#x27;</span>,<span class="hljs-string">&#x27;bca&#x27;</span>,<span class="hljs-string">&#x27;cba&#x27;</span>]<br>a.sort()   //永久升序排序<br>a.sort(reverse=<span class="hljs-literal">True</span>)  //永久降序排列<br><span class="hljs-built_in">sorted</span>(a)  //临时排序，不改变原列表<br><br>a.reverse()   //倒序排列<br><span class="hljs-built_in">len</span>(a)        //返回长度<br></code></pre></div></td></tr></table></figure><h2 id="四、操作列表"><a href="#四、操作列表" class="headerlink" title="四、操作列表"></a>四、操作列表</h2><h3 id="4-1-遍历列表"><a href="#4-1-遍历列表" class="headerlink" title="4.1 遍历列表"></a>4.1 遍历列表</h3><figure class="highlight python"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs python">magicians=[<span class="hljs-string">&#x27;alice&#x27;</span>,<span class="hljs-string">&#x27;bob&#x27;</span>,<span class="hljs-string">&#x27;kavin&#x27;</span>]<br><span class="hljs-keyword">for</span> magician <span class="hljs-keyword">in</span> magicians:<br>    <span class="hljs-built_in">print</span>(magician)<br></code></pre></div></td></tr></table></figure><h3 id="4-2-创建数值列表"><a href="#4-2-创建数值列表" class="headerlink" title="4.2 创建数值列表"></a>4.2 创建数值列表</h3><figure class="highlight python"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs python"><span class="hljs-keyword">for</span> value <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">1</span>,<span class="hljs-number">5</span>):<br>    <span class="hljs-built_in">print</span>(value)<br>digits=<span class="hljs-built_in">list</span>(<span class="hljs-built_in">range</span>(<span class="hljs-number">1</span>,<span class="hljs-number">5</span>))    <span class="hljs-comment">#生成1-4的列表</span><br>even_numbers=<span class="hljs-built_in">list</span>(<span class="hljs-built_in">range</span>(<span class="hljs-number">2</span>,<span class="hljs-number">11</span>,<span class="hljs-number">2</span>))   <span class="hljs-comment">#指定步长1-10内偶数</span><br><span class="hljs-comment">#数值列表处理</span><br><span class="hljs-built_in">min</span>(digits)<br><span class="hljs-built_in">max</span>(digits)<br><span class="hljs-built_in">sum</span>(digits)<br><br><span class="hljs-comment">#列表解析</span><br>squares=[value**<span class="hljs-number">2</span> <span class="hljs-keyword">for</span> value <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">1</span>,<span class="hljs-number">11</span>)]<br></code></pre></div></td></tr></table></figure><h3 id="4-3-使用列表的一部分"><a href="#4-3-使用列表的一部分" class="headerlink" title="4.3 使用列表的一部分"></a>4.3 使用列表的一部分</h3><h4 id="4-3-1-切片"><a href="#4-3-1-切片" class="headerlink" title="4.3.1 切片"></a>4.3.1 切片</h4><figure class="highlight python"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs python">digits=<span class="hljs-built_in">list</span>(<span class="hljs-built_in">range</span>(<span class="hljs-number">1</span>,<span class="hljs-number">5</span>))    <span class="hljs-comment">#生成1-4的列表</span><br><span class="hljs-built_in">print</span>(digits[<span class="hljs-number">0</span>:<span class="hljs-number">3</span>])         <span class="hljs-comment">#打印前3个元素</span><br><span class="hljs-built_in">print</span>(digits[:<span class="hljs-number">3</span>])         <span class="hljs-comment">#打印前3个元素，自动从最前开始</span><br><span class="hljs-built_in">print</span>(digits[<span class="hljs-number">0</span>:])         <span class="hljs-comment">#打印全部元素，自动到最后结束</span><br><span class="hljs-built_in">print</span>(digits[-<span class="hljs-number">3</span>:])         <span class="hljs-comment">#打印倒数3个元素</span><br><br><span class="hljs-comment">#复制列表</span><br>dii=digits[:]<br></code></pre></div></td></tr></table></figure><h3 id="4-4-元组"><a href="#4-4-元组" class="headerlink" title="4.4 元组"></a>4.4 元组</h3><p><strong>不可变列表被称为元组</strong></p><figure class="highlight python"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs python">dimen=(<span class="hljs-number">200</span>,<span class="hljs-number">50</span>)  <span class="hljs-comment">#定义元组</span><br></code></pre></div></td></tr></table></figure><h2 id="五、if语句"><a href="#五、if语句" class="headerlink" title="五、if语句"></a>五、if语句</h2><p>条件判断语句：</p><figure class="highlight python"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs python">cars=[<span class="hljs-string">&#x27;aua&#x27;</span>,<span class="hljs-string">&#x27;bub&#x27;</span>,<span class="hljs-string">&#x27;cuc&#x27;</span>]<br><span class="hljs-keyword">for</span> car <span class="hljs-keyword">in</span> cars:<br>    <span class="hljs-keyword">if</span> car == <span class="hljs-string">&#x27;aua&#x27;</span>:<br>        <span class="hljs-built_in">print</span>(car.upper())<br>    <span class="hljs-keyword">elif</span> car==<span class="hljs-string">&#x27;bub&#x27;</span>:<br>        <span class="hljs-built_in">print</span>(car.lower())<br>    <span class="hljs-keyword">else</span>:<br>        <span class="hljs-built_in">print</span>(car.title())<br>        <br><span class="hljs-keyword">if</span> cars[<span class="hljs-number">0</span>]==<span class="hljs-string">&#x27;happy&#x27;</span> <span class="hljs-keyword">and</span> cars[<span class="hljs-number">1</span>]==<span class="hljs-string">&#x27;bub&#x27;</span>:    //且<br>    <span class="hljs-keyword">pass</span><br><br><span class="hljs-keyword">if</span> <span class="hljs-string">&#x27;aua&#x27;</span> <span class="hljs-keyword">in</span> cars:<br>    <span class="hljs-keyword">pass</span><br><br></code></pre></div></td></tr></table></figure><h2 id="六、字典"><a href="#六、字典" class="headerlink" title="六、字典"></a>六、字典</h2><figure class="highlight python"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs python"><span class="hljs-comment">#创建字典</span><br>alien_0=&#123;<span class="hljs-string">&#x27;color&#x27;</span>: <span class="hljs-string">&#x27;green&#x27;</span>,<span class="hljs-string">&#x27;points&#x27;</span>: <span class="hljs-number">5</span>&#125;<br><span class="hljs-comment">#访问字典</span><br><span class="hljs-built_in">print</span>(alien_0[<span class="hljs-string">&#x27;color&#x27;</span>])<br><span class="hljs-built_in">print</span>(alien_0[<span class="hljs-string">&#x27;points&#x27;</span>])<br><span class="hljs-comment">#增加键值对</span><br>alien_0[<span class="hljs-string">&#x27;x_pos&#x27;</span>]=<span class="hljs-number">0</span><br><span class="hljs-comment">#删除键值对</span><br><span class="hljs-keyword">del</span> alien_0[<span class="hljs-string">&#x27;x_pos&#x27;</span>]<br><span class="hljs-comment">#遍历字典</span><br><span class="hljs-keyword">for</span> key,value <span class="hljs-keyword">in</span> alien_0.items():<br>    <span class="hljs-keyword">pass</span><br><br><span class="hljs-comment">#遍历键</span><br><span class="hljs-keyword">for</span> key <span class="hljs-keyword">in</span> languages.keys():<br><span class="hljs-keyword">pass</span><br></code></pre></div></td></tr></table></figure><p>字典是一系列键——值对，每个键和一个值相对应，使用键访问对应的值。</p><p>使用{}表示字典</p><h2 id="七、用户输入和while循环"><a href="#七、用户输入和while循环" class="headerlink" title="七、用户输入和while循环"></a>七、用户输入和while循环</h2><p>使用<code>input</code>接受用户输入</p><figure class="highlight python"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs python">message=<span class="hljs-built_in">input</span>(<span class="hljs-string">&quot;enter your name: &quot;</span>)<br><span class="hljs-built_in">print</span>(message)<br><br><span class="hljs-comment">#处理数字输入,将字符串转化为数字</span><br>age=<span class="hljs-built_in">input</span>(<span class="hljs-string">&quot;how old are you? &quot;</span>)<br>age=<span class="hljs-built_in">int</span>(age)<br><br><span class="hljs-comment">#while循环</span><br>a=<span class="hljs-number">1</span><br><span class="hljs-keyword">while</span> a&lt;=<span class="hljs-number">5</span>:<br>    a+=<span class="hljs-number">2</span><br></code></pre></div></td></tr></table></figure><p>使用break可以退出循环，continue直接跳转到该循环的开头判断处。</p><h2 id="八、函数"><a href="#八、函数" class="headerlink" title="八、函数"></a>八、函数</h2><figure class="highlight python"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs python"><span class="hljs-comment">#函数定义</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">greet</span>():</span><br>    <span class="hljs-string">&quot;&quot;&quot;hello&quot;&quot;&quot;</span><br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;hello&quot;</span>)<br>    <br><span class="hljs-comment">#传递信息</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">greet2</span>(<span class="hljs-params">name</span>):</span><br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;hello&quot;</span>+name)<br><br><span class="hljs-comment">#函数传递参数有多种实参</span><br><span class="hljs-comment">#1.位置实参：</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">a</span>(<span class="hljs-params">a,b,c,d</span>):</span><br>    <span class="hljs-keyword">pass</span><br>a(<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>,<span class="hljs-number">4</span>)      <span class="hljs-comment">#按位置顺序对应上方的参数</span><br><br><span class="hljs-comment">#2.关键字实参：</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">describe_ani</span>(<span class="hljs-params"><span class="hljs-built_in">type</span>,name</span>):</span><br>    <span class="hljs-keyword">pass</span><br>describe_ani(<span class="hljs-built_in">type</span>=<span class="hljs-string">&#x27;dog&#x27;</span>,name=<span class="hljs-string">&#x27;harry&#x27;</span>)   <span class="hljs-comment">#以键值对形式传参</span><br><br><span class="hljs-comment">#3.默认值，形参列表中一般先列出无默认值，再列出有默认值</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">describe_ani</span>(<span class="hljs-params"><span class="hljs-built_in">type</span>=<span class="hljs-string">&#x27;dog&#x27;</span>,name</span>):</span><br>    <span class="hljs-keyword">pass</span><br>describe_ani(name=<span class="hljs-string">&#x27;harry&#x27;</span>)   <span class="hljs-comment">#使用默认值</span><br><br><span class="hljs-comment">#4.返回值</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">get_formatted_name</span>(<span class="hljs-params">first_name, last_name</span>):</span><br>    full_name=first_name+<span class="hljs-string">&#x27; &#x27;</span>+last_name<br>    <span class="hljs-keyword">return</span> full_name.title()<br>musician=get_formatted_name(<span class="hljs-string">&#x27;jimi&#x27;</span>,<span class="hljs-string">&#x27;page&#x27;</span>)<br><br><span class="hljs-comment">#5.可变位置参数，需要放在前几种情况之后</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">cook</span>(<span class="hljs-params">*cookies</span>):</span><br>    <span class="hljs-keyword">for</span> cookie <span class="hljs-keyword">in</span> cookies:<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;cookie&quot;</span>)<br>cook(<span class="hljs-string">&#x27;apple&#x27;</span>,<span class="hljs-string">&#x27;banana&#x27;</span>)<br><br><span class="hljs-comment">#6.可变关键字参数，需要放在前几种情况之后</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">hello</span>(<span class="hljs-params">**hellos</span>):</span><br>    <span class="hljs-keyword">pass</span><br>hello(apple=<span class="hljs-string">&#x27;apple&#x27;</span>,banana=<span class="hljs-string">&#x27;banana&#x27;</span>)//任意个数<br></code></pre></div></td></tr></table></figure><h2 id="九、类"><a href="#九、类" class="headerlink" title="九、类"></a>九、类</h2><p>面向对象编程具有无与伦比的威力</p><figure class="highlight python"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs python"><span class="hljs-comment">#类的定义例子</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Dog</span>():</span><br>    <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">__init__</span>(<span class="hljs-params">self,name,age</span>):</span><br>        self.name=name    <br>        self.age=age<br>    <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">sit</span>(<span class="hljs-params">self</span>):</span><br>        <span class="hljs-built_in">print</span>(self.name.title()+<span class="hljs-string">&quot;is now sitting!&quot;</span>)<br>    <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">roll_over</span>(<span class="hljs-params">self</span>):</span><br>        <span class="hljs-built_in">print</span>(self.name.title()+<span class="hljs-string">&quot; rooled over!&quot;</span>)<br></code></pre></div></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>My New Post</title>
    <link href="/2021/10/14/My-New-Post/"/>
    <url>/2021/10/14/My-New-Post/</url>
    
    <content type="html"><![CDATA[<p>ALLRIght，let’s try</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2021/10/14/hello-world/"/>
    <url>/2021/10/14/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></div></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">$ hexo server<br></code></pre></div></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">$ hexo generate<br></code></pre></div></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></div></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
